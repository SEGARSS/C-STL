// STL unique | Удалить повторяющиеся элементы | Библиотека стандартных шаблонов (stl) C++ #23 - Видео 23.

#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

int main()
{
	setlocale(LC_ALL,"ru");

	//----------------------------------------------------------------------------------------------

	/*Изменить или удалить данные из масива не получиться такими методами, только убрать (скрыть) 
	  вывести элементы, а те что повсторяються не показывать.*/

	cout << "Пример 'убираем' повторяющиеся элементы в массиве." << endl;
	int arr[] = {1,2,2,2,5,4,4};

	auto result1 = unique(begin(arr), end(arr));

	for_each(begin(arr), result1, [](int a)
	{
		cout << a << endl;
	});

	//----------------------------------------------------------------------------------------------

	/*В векторе и лесте мы можем именно убрать лишние данные (удалить)*/

	cout << "Пример 'удаляем' повторяющиеся элементы в векторе." << endl;

	vector<int> v1 = {1,2,2,2,5,4,4};

	auto result2 = unique(begin(v1), end(v1));

	v1.erase(result2, v1.end());

	for (int num1 : v1) 
	{
      cout << num1 << " ";
   }

	cout << endl;
	
	//----------------------------------------------------------------------------------------------

	/*Это можно сделать как и с ветора в лист и на оборот, а не только с одинаковым типом данных.*/

	cout << "Помещаем данные(копируем) одного вектора в другой." << endl;

	vector<int> v2 = {3,7,2,6,5,4,4};
	vector<int> v3 = {2,1,3,4,6,8,7};

	for (int num : v2) 
	{
      cout << num << " ";
   }

	cout << endl;

	for (int num : v3) 
	{
      cout << num << " ";
   }

	cout << endl;

	auto result3 = unique_copy(begin(v2), end(v2), back_inserter(v2));

	for (int num : v2) 
	{
      cout << num << " ";
   }

	cout << endl;

	for (int num : v3) 
	{
      cout << num << " ";
   }

	//----------------------------------------------------------------------------------------------

	return 0;
}